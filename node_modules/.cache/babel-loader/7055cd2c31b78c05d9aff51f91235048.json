{"ast":null,"code":"import { Firebase, Firestore } from '../../config/firebase';\nimport { types } from './actionTypes';\nimport { SuccessMsg, ErrorMsg } from '../../utils/helpers/msg';\nexport const register = data => async dispatch => {\n  Firebase.auth().createUserWithEmailAndPassword(data.email, data.password).then(res => {\n    Firestore.collection(\"users\").doc(res.user.uid).set({\n      firstName: data.firstName,\n      lastName: data.lastName\n    }).then(() => {\n      dispatch({\n        type: types.REGISTER_SUCCESS\n      });\n      SuccessMsg('Successfully Registered');\n    });\n  }).catch(err => {\n    ErrorMsg(err.message);\n  });\n};\nexport const login = data => async dispatch => {\n  Firebase.auth().signInWithEmailAndPassword(data.email, data.password).then(() => {\n    SuccessMsg(`Welcome ${data.email}`);\n  }).catch(err => {\n    ErrorMsg(err.message);\n  });\n};\nexport const logout = () => async (dispatch, getState) => {\n  const userId = getState().firebase.user.uid;\n  Firestore.collection('users').doc(userId).get().then(res => {\n    const name = res.data().firstName;\n    Firebase.auth().signOut().then(() => {\n      SuccessMsg(`Bye ${name} see you soon <span>&#128521;</span>`);\n      dispatch({\n        type: types.LOGOUT,\n        payload: ''\n      });\n    }).catch(err => {\n      ErrorMsg(err.message);\n    });\n  });\n};\nexport const initFirebase = () => async dispatch => {\n  Firebase.auth().onAuthStateChanged(user => {\n    dispatch({\n      type: types.FIREBASE_LOADED,\n      payload: true\n    });\n\n    if (user) {\n      dispatch({\n        type: types.LOGIN_SUCCESS,\n        payload: user\n      });\n    }\n  });\n};","map":{"version":3,"sources":["/home/ermal/Documents/Personal/Projects/rc-todo/src/store/actions/authActions.js"],"names":["Firebase","Firestore","types","SuccessMsg","ErrorMsg","register","data","dispatch","auth","createUserWithEmailAndPassword","email","password","then","res","collection","doc","user","uid","set","firstName","lastName","type","REGISTER_SUCCESS","catch","err","message","login","signInWithEmailAndPassword","logout","getState","userId","firebase","get","name","signOut","LOGOUT","payload","initFirebase","onAuthStateChanged","FIREBASE_LOADED","LOGIN_SUCCESS"],"mappings":"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","sourcesContent":["import {Firebase, Firestore} from '../../config/firebase'\nimport {types} from './actionTypes';\nimport {SuccessMsg, ErrorMsg} from '../../utils/helpers/msg'\n\nexport const register = (data) => async dispatch => {\n    Firebase.auth().createUserWithEmailAndPassword(data.email, data.password).then((res) => {\n\n        Firestore.collection(\"users\").doc(res.user.uid).set({\n            firstName: data.firstName,\n            lastName: data.lastName\n        }).then(() => {\n            dispatch({type: types.REGISTER_SUCCESS})\n            SuccessMsg('Successfully Registered')\n        })\n        \n    }).catch(err => {\n        ErrorMsg(err.message)\n    })\n}\n\n\nexport const login = (data) => async dispatch => {\n    Firebase.auth().signInWithEmailAndPassword(data.email, data.password).then(() => {  \n        SuccessMsg(`Welcome ${data.email}`)\n    }).catch(err => {\n        ErrorMsg(err.message)\n    })\n}\n\n\nexport const logout = () => async (dispatch, getState) => {\n\n    const userId  = getState().firebase.user.uid\n\n    Firestore.collection('users').doc(userId).get().then(res => {\n\n        const name  = res.data().firstName\n\n        Firebase.auth().signOut().then(() => {\n            SuccessMsg(`Bye ${name} see you soon <span>&#128521;</span>`)\n            dispatch({\n                type: types.LOGOUT,\n                payload: ''\n            })\n        }).catch(err => {\n            ErrorMsg(err.message)\n        })\n\n\n    })\n\n\n}\n\n\n\nexport const initFirebase = () => async dispatch => {\n\n    Firebase.auth().onAuthStateChanged((user) => {\n        dispatch({\n            type: types.FIREBASE_LOADED,\n            payload: true\n        })\n        if (user) {\n            dispatch({\n                type: types.LOGIN_SUCCESS,\n                payload: user\n            })\n        }\n      });\n}"]},"metadata":{},"sourceType":"module"}