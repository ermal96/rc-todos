{"ast":null,"code":"import { Firestore } from '../../config/firebase';\nimport { types } from './actionTypes';\nimport { SuccessMsg, ErrorMsg } from '../../utils/helpers/msg'; // Add Todo\n\nexport const addTodo = newToDo => async dispatch => {\n  Firestore.collection('todos').add(newToDo).then(docRef => {\n    let data = null;\n    data = { ...newToDo,\n      id: docRef.id\n    };\n    dispatch({\n      type: types.ADD_TODO,\n      payload: data\n    });\n    SuccessMsg('Added successfully');\n  }).catch(err => {\n    ErrorMsg(err.message);\n  });\n}; // Remove Todo\n\nexport const removeTodo = id => async dispatch => {\n  Firestore.collection('todos').doc(id).delete().then(() => {\n    SuccessMsg('Deleted successfully');\n    dispatch({\n      type: types.DELETE_TODO,\n      payload: id\n    });\n  }).catch(err => {\n    ErrorMsg(err.message);\n  });\n}; // Move Todo\n\nexport const moveTodo = (id, bool) => async dispatch => {\n  Firestore.collection('todos').doc(id).update({\n    completed: bool\n  }).then(() => {\n    if (bool) {\n      SuccessMsg('Moved to completed ');\n    } else {\n      SuccessMsg('Moved to todo ');\n    }\n\n    dispatch({\n      type: types.MOVE_TODO,\n      payload: id\n    });\n  }).catch(err => {\n    ErrorMsg(err.message);\n  });\n}; // Set Active Component\n\nexport const activeComponent = component => async dispatch => {\n  dispatch({\n    type: types.ACTIVE_COMPONENT,\n    activeComponent: component\n  });\n}; // Fetch active todos from firebase\n\nexport const fetchTodos = status => async (dispatch, getState) => {\n  let data = [];\n  const userId = getState().firebase.user.uid;\n  Firestore.collection('todos').where(\"completed\", \"==\", status).where(\"userId\", \"==\", userId).orderBy('date', 'desc').get().then(res => {\n    res.forEach(item => {\n      const doc = { ...item.data(),\n        id: item.id\n      };\n      data.push(doc);\n    });\n    dispatch({\n      type: types.FETCH_TODOS,\n      todos: data,\n      loading: false\n    });\n  });\n};","map":{"version":3,"sources":["/home/ermal/Documents/Personal/Projects/rc-todo/src/store/actions/todosActions.js"],"names":["Firestore","types","SuccessMsg","ErrorMsg","addTodo","newToDo","dispatch","collection","add","then","docRef","data","id","type","ADD_TODO","payload","catch","err","message","removeTodo","doc","delete","DELETE_TODO","moveTodo","bool","update","completed","MOVE_TODO","activeComponent","component","ACTIVE_COMPONENT","fetchTodos","status","getState","userId","firebase","user","uid","where","orderBy","get","res","forEach","item","push","FETCH_TODOS","todos","loading"],"mappings":"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","sourcesContent":["import {Firestore} from '../../config/firebase'\nimport {types} from './actionTypes';\nimport {SuccessMsg, ErrorMsg} from '../../utils/helpers/msg'\n\n// Add Todo\nexport const addTodo = newToDo => async dispatch => {\n\n\n    Firestore.collection('todos').add(newToDo).then(docRef => {\n        let data = null\n        data = {\n            ...newToDo,\n            id: docRef.id\n        }\n        dispatch({\n            type: types.ADD_TODO, \n            payload: data,\n        });\n\n        SuccessMsg('Added successfully')\n\n    }).catch(err => {\n        ErrorMsg(err.message)\n    })\n\n};\n\n\n// Remove Todo\nexport const removeTodo = id => async dispatch => {\n    Firestore.collection('todos').doc(id).delete().then(() => {\n        SuccessMsg('Deleted successfully')\n        dispatch({\n            type: types.DELETE_TODO, \n            payload: id\n        });\n    }).catch((err) => {\n        ErrorMsg(err.message)\n    });\n\n\n};\n\n\n// Move Todo\nexport const moveTodo = (id, bool) => async dispatch => {\n    Firestore.collection('todos').doc(id).update({completed: bool}).then(() => {\n        if (bool) {\n            SuccessMsg('Moved to completed ')\n        } else {\n            SuccessMsg('Moved to todo ')\n        }\n        dispatch({\n            type: types.MOVE_TODO, \n            payload: id\n        })\n    }).catch((err) => {\n        ErrorMsg(err.message)\n    });\n};\n\n\n// Set Active Component\nexport const activeComponent = (component) => async dispatch => {\n    dispatch({type: types.ACTIVE_COMPONENT, activeComponent: component});\n};\n\n\n// Fetch active todos from firebase\nexport const fetchTodos = (status) => async (dispatch, getState) => {\n\n    let data = [];\n\n    const userId = getState().firebase.user.uid;\n\n\n    Firestore.collection('todos').where(\"completed\", \"==\", status ).where(\"userId\", \"==\", userId).orderBy('date', 'desc').get().then(res => {\n\n        res.forEach(item => {\n            const doc = {\n                ...item.data(),\n                id: item.id\n            };\n            data.push(doc);\n\n        })\n\n        dispatch({type: types.FETCH_TODOS, todos: data, loading: false});\n\n    })\n\n};\n"]},"metadata":{},"sourceType":"module"}