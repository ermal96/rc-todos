{"ast":null,"code":"var _jsxFileName = \"/home/ermal/Documents/Personal/Projects/rc-todo/src/containers/todos/ActiveTodos.js\";\nimport React, { useEffect } from 'react';\nimport TodoList from '../../components/todos/TodoList';\nimport { connect } from 'react-redux';\nimport { fetchTodos } from '../../store/actions/todosActions';\nimport AddTodoForm from '../../components/todos/AddTodoForm';\nimport FilterMenu from './FilterMenu';\nimport { TODOS, ACTIVE, COMPLETED } from '../../constants/routes';\nimport { useLocation } from \"react-router-dom\";\n\nconst ActiveTodos = ({\n  fetchTodos,\n  todos\n}) => {\n  let location = useLocation();\n  useEffect(() => {\n    console.log(location.pathname);\n    console.log(TODOS + ACTIVE); // if(location.pathname === TODOS + ACTIVE){\n    //     fetchTodos(false)\n    // }else if (location.pathname === TODOS + COMPLETED){\n    //     fetchTodos(true)\n    // }\n  }, [fetchTodos]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AddTodoForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FilterMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \"active\"));\n};\n\nconst mapStateToProps = ref => {\n  return {\n    todos: ref.todos.items\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchTodos\n})(ActiveTodos);","map":{"version":3,"sources":["/home/ermal/Documents/Personal/Projects/rc-todo/src/containers/todos/ActiveTodos.js"],"names":["React","useEffect","TodoList","connect","fetchTodos","AddTodoForm","FilterMenu","TODOS","ACTIVE","COMPLETED","useLocation","ActiveTodos","todos","location","console","log","pathname","mapStateToProps","ref","items"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,kCAAzB;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,wBAAzC;AAEA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACP,EAAAA,UAAD;AAAaQ,EAAAA;AAAb,CAAD,KAAyB;AAEzC,MAAIC,QAAQ,GAAGH,WAAW,EAA1B;AAGAT,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,QAArB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,GAAGC,MAApB,EAFY,CAGZ;AACA;AACA;AACA;AACA;AACC,GARI,EAQF,CAACJ,UAAD,CARE,CAAT;AAUA,sBACQ,uDACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,CADR;AASH,CAxBD;;AA0BA,MAAMa,eAAe,GAAIC,GAAD,IAAS;AAC7B,SAAO;AAACN,IAAAA,KAAK,EAAEM,GAAG,CAACN,KAAJ,CAAUO;AAAlB,GAAP;AACH,CAFD;;AAIA,eAAehB,OAAO,CAACc,eAAD,EAAkB;AAACb,EAAAA;AAAD,CAAlB,CAAP,CAAuCO,WAAvC,CAAf","sourcesContent":["import React, {useEffect} from 'react'\nimport TodoList from '../../components/todos/TodoList';\nimport {connect} from 'react-redux';\nimport {fetchTodos} from '../../store/actions/todosActions';\nimport AddTodoForm from '../../components/todos/AddTodoForm';\nimport FilterMenu from './FilterMenu';\nimport { TODOS, ACTIVE, COMPLETED } from '../../constants/routes'\n\nimport { useLocation } from \"react-router-dom\";\n\nconst ActiveTodos = ({fetchTodos, todos}) => {\n\n    let location = useLocation();\n\n  \n    useEffect(() => {\n        console.log(location.pathname)\n        console.log(TODOS + ACTIVE)\n        // if(location.pathname === TODOS + ACTIVE){\n        //     fetchTodos(false)\n        // }else if (location.pathname === TODOS + COMPLETED){\n        //     fetchTodos(true)\n        // }\n        }, [fetchTodos])\n\n    return (\n            <>\n                <AddTodoForm />\n                <FilterMenu />\n                {/* {console.log(todos)} */}\n                {/* <TodoList data={todos}/> */}\n                <p>active</p>\n            </>\n    )\n}\n\nconst mapStateToProps = (ref) => {\n    return {todos: ref.todos.items};\n}\n\nexport default connect(mapStateToProps, {fetchTodos})(ActiveTodos)\n"]},"metadata":{},"sourceType":"module"}