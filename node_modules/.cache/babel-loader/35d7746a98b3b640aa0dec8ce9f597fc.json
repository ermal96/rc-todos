{"ast":null,"code":"import { Firestore } from '../../config/firebase';\nimport { types } from './actionTypes';\nimport { SuccessMsg, ErrorMsg } from '../../utils/helpers/msg'; // Add Todo\n\nexport const addTodo = newToDo => async dispatch => {\n  Firestore.collection('todos').add(newToDo).then(docRef => {\n    let data = null;\n    data = { ...newToDo,\n      id: docRef.id\n    };\n    dispatch({\n      type: types.ADD_TODO,\n      payload: data\n    });\n    SuccessMsg('Added successfully');\n  }).catch(err => {\n    ErrorMsg(err.message);\n  });\n}; // Remove Todo\n\nexport const removeTodo = id => async dispatch => {\n  Firestore.collection('todos').doc(id).delete().then(() => {\n    SuccessMsg('Deleted successfully');\n    dispatch({\n      type: types.DELETE_TODO,\n      payload: id\n    });\n  }).catch(err => {\n    ErrorMsg(err.message);\n  });\n}; // Move Todo\n\nexport const moveTodo = (id, status) => async dispatch => {\n  Firestore.collection('todos').doc(id).update({\n    status: status\n  }).then(() => {\n    if (status) {\n      SuccessMsg('Moved to completed ');\n    } else {\n      SuccessMsg('Moved to todo ');\n    }\n\n    dispatch({\n      type: types.MOVE_TODO,\n      payload: id\n    });\n  }).catch(err => {\n    ErrorMsg(err.message);\n  });\n}; // Fetch active todos from firebase\n\nexport const fetchTodos = status => async (dispatch, getState) => {\n  let data = [];\n  const userId = getState().firebase.user.uid;\n\n  if (status) {\n    Firestore.collection('todos').where(\"status\", \"==\", status).where(\"userId\", \"==\", userId).orderBy('date', 'desc').get().then(res => {\n      res.forEach(item => {\n        const doc = { ...item.data(),\n          id: item.id\n        };\n        data.push(doc);\n      });\n      dispatch({\n        type: types.FETCH_TODOS,\n        payload: data\n      });\n    });\n  } else {\n    Firestore.collection('todos').where(\"userId\", \"==\", userId).orderBy('date', 'desc').get().then(res => {\n      res.forEach(item => {\n        const doc = { ...item.data(),\n          id: item.id\n        };\n        data.push(doc);\n      });\n      dispatch({\n        type: types.FETCH_TODOS,\n        payload: data\n      });\n    });\n  }\n};","map":{"version":3,"sources":["/home/ermal/Documents/Personal/Projects/rc-todo/src/store/actions/todosActions.js"],"names":["Firestore","types","SuccessMsg","ErrorMsg","addTodo","newToDo","dispatch","collection","add","then","docRef","data","id","type","ADD_TODO","payload","catch","err","message","removeTodo","doc","delete","DELETE_TODO","moveTodo","status","update","MOVE_TODO","fetchTodos","getState","userId","firebase","user","uid","where","orderBy","get","res","forEach","item","push","FETCH_TODOS"],"mappings":"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","sourcesContent":["import {Firestore} from '../../config/firebase'\nimport {types} from './actionTypes';\nimport {SuccessMsg, ErrorMsg} from '../../utils/helpers/msg'\n\n// Add Todo\nexport const addTodo = newToDo => async dispatch => {\n\n    Firestore.collection('todos').add(newToDo).then(docRef => {\n        let data = null\n        data = {\n            ...newToDo,\n            id: docRef.id\n        }\n         dispatch({\n            type: types.ADD_TODO, \n            payload: data,\n        });\n\n        SuccessMsg('Added successfully')\n\n    }).catch(err => {\n        ErrorMsg(err.message)\n    })\n\n};\n\n\n// Remove Todo\nexport const removeTodo = id => async dispatch => {\n    Firestore.collection('todos').doc(id).delete().then(() => {\n        SuccessMsg('Deleted successfully')\n        dispatch({\n            type: types.DELETE_TODO, \n            payload: id\n        });\n    }).catch((err) => {\n        ErrorMsg(err.message)\n    });\n\n\n};\n\n\n// Move Todo\nexport const moveTodo = (id, status) => async dispatch => {\n    Firestore.collection('todos').doc(id).update({status: status}).then(() => {\n        if (status) {\n            SuccessMsg('Moved to completed ')\n        } else {\n            SuccessMsg('Moved to todo ')\n        }\n        dispatch({\n            type: types.MOVE_TODO, \n            payload: id\n        })\n    }).catch((err) => {\n        ErrorMsg(err.message)\n    });\n};\n\n\n// Fetch active todos from firebase\nexport const fetchTodos = (status) => async (dispatch, getState) => {\n\n    let data = [];\n\n    const userId = getState().firebase.user.uid;\n\n\n    if(status){\n        Firestore.collection('todos').where(\"status\", \"==\", status ).where(\"userId\", \"==\", userId).orderBy('date', 'desc').get().then(res => {  \n\n            res.forEach(item => {\n                const doc = {\n                    ...item.data(),\n                    id: item.id\n                };\n                data.push(doc);\n\n            })\n\n            dispatch({\n                type: types.FETCH_TODOS, \n                payload: data\n            });\n\n        })\n    } else{\n        Firestore.collection('todos').where(\"userId\", \"==\", userId).orderBy('date', 'desc').get().then(res => {  \n\n            res.forEach(item => {\n                const doc = {\n                    ...item.data(),\n                    id: item.id\n                };\n                data.push(doc);\n\n            })\n\n            dispatch({\n                type: types.FETCH_TODOS, \n                payload: data\n            });\n\n        })\n    }\n\n\n};\n"]},"metadata":{},"sourceType":"module"}