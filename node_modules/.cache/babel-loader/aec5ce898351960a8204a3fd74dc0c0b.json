{"ast":null,"code":"var _jsxFileName = \"/home/ermal/Documents/Personal/Projects/rc-todo/src/App.js\";\nimport React, { useEffect } from 'react';\nimport Layout from './containers/Layout';\nimport Todos from './containers/todos/Todos';\nimport Login from './containers/auth/Login';\nimport Register from './containers/auth/Register';\nimport Logout from './containers/auth/Logout';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport PrivateRoute from './components/routes/PrivateRoute';\nimport PublicRoute from './components/routes/PublicRoute';\nimport * as ROUTES from './constants/routes';\nimport { connect } from 'react-redux';\nimport { initFirebase } from './store/actions/authActions';\nimport Loader from './components/Loader';\nimport './App.css';\n\nconst App = ({\n  initFirebase,\n  isFirebaseloaded\n}) => {\n  useEffect(() => {\n    initFirebase();\n  }, [initFirebase]);\n\n  if (isFirebaseloaded) {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(PrivateRoute, {\n      exact: true,\n      path: ROUTES.TODOS,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Todos, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(PublicRoute, {\n      exact: true,\n      path: ROUTES.LOGIN,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Login, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(PublicRoute, {\n      exact: true,\n      path: ROUTES.REGISTER,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Register, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(PrivateRoute, {\n      exact: true,\n      path: ROUTES.LOGOUT,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Logout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: ROUTES.UNDEFINED,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Redirect, {\n      to: ROUTES.TODOS,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 29\n      }\n    })))));\n  } else {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 12\n      }\n    });\n  }\n};\n\nconst mapStateToProps = ref => {\n  return {\n    isFirebaseloaded: ref.firebase.isFirebaseloaded\n  };\n};\n\nexport default connect(mapStateToProps, {\n  initFirebase\n})(App);","map":{"version":3,"sources":["/home/ermal/Documents/Personal/Projects/rc-todo/src/App.js"],"names":["React","useEffect","Layout","Todos","Login","Register","Logout","BrowserRouter","Router","Switch","Route","Redirect","PrivateRoute","PublicRoute","ROUTES","connect","initFirebase","Loader","App","isFirebaseloaded","TODOS","LOGIN","REGISTER","LOGOUT","UNDEFINED","mapStateToProps","ref","firebase"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,MAAjC,EAAyCC,KAAzC,EAAgDC,QAAhD,QAA+D,kBAA/D;AACA,OAAOC,YAAP,MAA0B,kCAA1B;AACA,OAAOC,WAAP,MAAyB,iCAAzB;AACA,OAAO,KAAKC,MAAZ,MAAwB,oBAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAO,WAAP;;AAGA,MAAMC,GAAG,GAAG,CAAC;AAACF,EAAAA,YAAD;AAAeG,EAAAA;AAAf,CAAD,KAAsC;AAE9ClB,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,YAAY;AACf,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;;AAIA,MAAGG,gBAAH,EAAoB;AAChB,wBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,YAAD;AAAc,MAAA,KAAK,MAAnB;AAAoB,MAAA,IAAI,EAAEL,MAAM,CAACM,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,eAMI,oBAAC,WAAD;AAAa,MAAA,KAAK,MAAlB;AAAmB,MAAA,IAAI,EAAEN,MAAM,CAACO,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CANJ,eAUI,oBAAC,WAAD;AAAa,MAAA,KAAK,MAAlB;AAAmB,MAAA,IAAI,EAAEP,MAAM,CAACQ,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAVJ,eAcI,oBAAC,YAAD;AAAc,MAAA,KAAK,MAAnB;AAAoB,MAAA,IAAI,EAAER,MAAM,CAACS,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAdJ,eAkBI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAET,MAAM,CAACU,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAEV,MAAM,CAACM,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAlBJ,CADJ,CADJ,CADJ;AA6BH,GA9BD,MA8BK;AACD,wBACG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH;AAGH;AAEJ,CA1CD;;AA4CA,MAAMK,eAAe,GAAIC,GAAD,IAAS;AAC7B,SAAO;AACHP,IAAAA,gBAAgB,EAAEO,GAAG,CAACC,QAAJ,CAAaR;AAD5B,GAAP;AAGH,CAJD;;AAMA,eAAeJ,OAAO,CAACU,eAAD,EAAkB;AAACT,EAAAA;AAAD,CAAlB,CAAP,CAAyCE,GAAzC,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport Layout from './containers/Layout';\nimport Todos from './containers/todos/Todos';\nimport Login from './containers/auth/Login';\nimport Register from './containers/auth/Register';\nimport Logout from './containers/auth/Logout'\nimport {BrowserRouter as Router, Switch, Route, Redirect} from \"react-router-dom\";\nimport PrivateRoute  from './components/routes/PrivateRoute'\nimport PublicRoute  from './components/routes/PublicRoute'\nimport * as ROUTES from './constants/routes'\nimport { connect } from 'react-redux';\nimport { initFirebase } from './store/actions/authActions';\nimport Loader from './components/Loader';\n\nimport './App.css'\n\n\nconst App = ({initFirebase, isFirebaseloaded}) => {\n\n    useEffect(() => {\n        initFirebase()\n    }, [initFirebase])\n\n    if(isFirebaseloaded){\n        return (\n            <Router>\n                <Layout>\n                    <Switch>\n    \n                        <PrivateRoute exact path={ROUTES.TODOS}>\n                            <Todos/>\n                        </PrivateRoute>\n    \n                        <PublicRoute exact path={ROUTES.LOGIN}>\n                            <Login/>\n                        </PublicRoute>\n    \n                        <PublicRoute exact path={ROUTES.REGISTER}>\n                            <Register/>\n                        </PublicRoute>\n    \n                        <PrivateRoute exact path={ROUTES.LOGOUT}>\n                            <Logout/>\n                        </PrivateRoute>\n    \n                        <Route path={ROUTES.UNDEFINED}>\n                            <Redirect to={ROUTES.TODOS}/>\n                        </Route>\n    \n                    </Switch>\n                </Layout>\n            </Router>\n        );\n    }else{\n        return(\n           <Loader />\n        )\n    }\n \n}\n\nconst mapStateToProps = (ref) => {\n    return {\n        isFirebaseloaded: ref.firebase.isFirebaseloaded\n    }\n}\n\nexport default connect(mapStateToProps, {initFirebase})(App)\n"]},"metadata":{},"sourceType":"module"}