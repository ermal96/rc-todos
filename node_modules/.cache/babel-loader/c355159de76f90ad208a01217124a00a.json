{"ast":null,"code":"var _jsxFileName = \"/home/ermal/Documents/Personal/Projects/rc-todo/src/containers/todos/FilteredTodos.js\";\nimport React, { useEffect } from 'react';\nimport TodoList from '../../components/todos/TodoList';\nimport { connect } from 'react-redux';\nimport { fetchTodos } from '../../store/actions/todosActions';\nimport AddTodoForm from '../../components/todos/AddTodoForm';\nimport FilterMenu from './FilterMenu';\nimport { TODOS, ACTIVE, COMPLETED } from '../../constants/routes';\nimport { useLocation } from \"react-router-dom\";\n\nconst FilteredTodos = ({\n  fetchTodos,\n  todos\n}) => {\n  let location = useLocation();\n  useEffect(() => {\n    if (location.pathname === TODOS + ACTIVE) {\n      fetchTodos(false);\n    } else if (location.pathname === TODOS + COMPLETED) {\n      fetchTodos(true);\n    }\n  }, [fetchTodos]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AddTodoForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FilterMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }), console.log(todos), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, \"hello\"));\n};\n\nconst mapStateToProps = ref => {\n  return {\n    todos: ref.todos.items\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchTodos\n})(FilteredTodos);","map":{"version":3,"sources":["/home/ermal/Documents/Personal/Projects/rc-todo/src/containers/todos/FilteredTodos.js"],"names":["React","useEffect","TodoList","connect","fetchTodos","AddTodoForm","FilterMenu","TODOS","ACTIVE","COMPLETED","useLocation","FilteredTodos","todos","location","pathname","console","log","mapStateToProps","ref","items"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,kCAAzB;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,wBAAzC;AAEA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACP,EAAAA,UAAD;AAAaQ,EAAAA;AAAb,CAAD,KAAyB;AAE3C,MAAIC,QAAQ,GAAGH,WAAW,EAA1B;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGY,QAAQ,CAACC,QAAT,KAAsBP,KAAK,GAAGC,MAAjC,EAAwC;AACpCJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAFD,MAEM,IAAIS,QAAQ,CAACC,QAAT,KAAsBP,KAAK,GAAGE,SAAlC,EAA4C;AAC9CL,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACA,GANI,EAMF,CAACA,UAAD,CANE,CAAT;AAQA,sBACQ,uDACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKW,OAAO,CAACC,GAAR,CAAYJ,KAAZ,CAHL,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALJ,CADR;AASH,CArBD;;AAuBA,MAAMK,eAAe,GAAIC,GAAD,IAAS;AAC7B,SAAO;AAACN,IAAAA,KAAK,EAAEM,GAAG,CAACN,KAAJ,CAAUO;AAAlB,GAAP;AACH,CAFD;;AAIA,eAAehB,OAAO,CAACc,eAAD,EAAkB;AAACb,EAAAA;AAAD,CAAlB,CAAP,CAAuCO,aAAvC,CAAf","sourcesContent":["import React, {useEffect} from 'react'\nimport TodoList from '../../components/todos/TodoList';\nimport {connect} from 'react-redux';\nimport {fetchTodos} from '../../store/actions/todosActions';\nimport AddTodoForm from '../../components/todos/AddTodoForm';\nimport FilterMenu from './FilterMenu';\nimport { TODOS, ACTIVE, COMPLETED } from '../../constants/routes'\n\nimport { useLocation } from \"react-router-dom\";\n\nconst FilteredTodos = ({fetchTodos, todos}) => {\n\n    let location = useLocation();\n  \n    useEffect(() => {\n        if(location.pathname === TODOS + ACTIVE){\n            fetchTodos(false)\n        }else if (location.pathname === TODOS + COMPLETED){\n            fetchTodos(true)\n        }\n        }, [fetchTodos])\n\n    return (\n            <>\n                <AddTodoForm />\n                <FilterMenu />\n                {console.log(todos)}\n                {/* <TodoList data={todos}/> */}\n                <p>hello</p>\n            </>\n    )\n}\n\nconst mapStateToProps = (ref) => {\n    return {todos: ref.todos.items};\n}\n\nexport default connect(mapStateToProps, {fetchTodos})(FilteredTodos)\n"]},"metadata":{},"sourceType":"module"}