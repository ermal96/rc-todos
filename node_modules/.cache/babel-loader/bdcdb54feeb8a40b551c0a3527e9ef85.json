{"ast":null,"code":"var _jsxFileName = \"/home/ermal/Documents/Personal/Projects/rc-todo/src/App.js\";\nimport React, { useEffect } from 'react';\nimport Layout from './containers/Layout';\nimport Login from './containers/auth/Login';\nimport Register from './containers/auth/Register';\nimport Logout from './containers/auth/Logout';\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\nimport PrivateRoute from './components/routes/PrivateRoute';\nimport PublicRoute from './components/routes/PublicRoute';\nimport * as ROUTES from './constants/routes';\nimport { connect } from 'react-redux';\nimport { initFirebase } from './store/actions/authActions';\nimport Loader from './components/styled/Loader';\nimport ActiveTodos from './containers/todos/ActiveTodos';\nimport AllTodos from './containers/todos/AllTodos';\nimport CompletedTodos from './containers/todos/CompletedTodos';\n\nconst App = ({\n  initFirebase,\n  isFirebaseloaded\n}) => {\n  useEffect(() => {\n    initFirebase();\n  }, [initFirebase]);\n\n  if (isFirebaseloaded) {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(PrivateRoute, {\n      exact: true,\n      path: ROUTES.TODOS,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Redirect, {\n      path: ROUTES.HOME,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(AllTodos, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(PrivateRoute, {\n      exact: true,\n      path: ROUTES.HOME,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(AllTodos, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(PrivateRoute, {\n      exact: true,\n      path: ROUTES.TODOS + ROUTES.ACTIVE,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ActiveTodos, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(PrivateRoute, {\n      exact: true,\n      path: ROUTES.TODOS + ROUTES.COMPLETED,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CompletedTodos, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(PublicRoute, {\n      exact: true,\n      path: ROUTES.LOGIN,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Login, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(PublicRoute, {\n      exact: true,\n      path: ROUTES.REGISTER,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Register, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(PrivateRoute, {\n      exact: true,\n      path: ROUTES.LOGOUT,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Logout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    })))));\n  } else {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 12\n      }\n    });\n  }\n};\n\nconst mapStateToProps = ref => {\n  return {\n    isFirebaseloaded: ref.firebase.isFirebaseloaded\n  };\n};\n\nexport default connect(mapStateToProps, {\n  initFirebase\n})(App);","map":{"version":3,"sources":["/home/ermal/Documents/Personal/Projects/rc-todo/src/App.js"],"names":["React","useEffect","Layout","Login","Register","Logout","BrowserRouter","Router","Switch","Redirect","PrivateRoute","PublicRoute","ROUTES","connect","initFirebase","Loader","ActiveTodos","AllTodos","CompletedTodos","App","isFirebaseloaded","TODOS","HOME","ACTIVE","COMPLETED","LOGIN","REGISTER","LOGOUT","mapStateToProps","ref","firebase"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport Layout from './containers/Layout';\nimport Login from './containers/auth/Login';\nimport Register from './containers/auth/Register';\nimport Logout from './containers/auth/Logout'\nimport {BrowserRouter as Router, Switch, Redirect} from \"react-router-dom\";\nimport PrivateRoute  from './components/routes/PrivateRoute'\nimport PublicRoute  from './components/routes/PublicRoute'\nimport * as ROUTES from './constants/routes'\nimport { connect } from 'react-redux';\nimport { initFirebase } from './store/actions/authActions';\nimport Loader from './components/styled/Loader';\n\nimport ActiveTodos from './containers/todos/ActiveTodos';\nimport AllTodos from './containers/todos/AllTodos';\nimport CompletedTodos from './containers/todos/CompletedTodos';\n\nconst App = ({initFirebase, isFirebaseloaded}) => {\n\n    useEffect(() => {\n        initFirebase()\n    }, [initFirebase])\n\n    if(isFirebaseloaded){\n        return (\n            <Router>\n                <Layout>\n                    <Switch>\n\n                        <PrivateRoute exact path={ROUTES.TODOS}>\n                        <Redirect  path={ROUTES.HOME}>\n                            <AllTodos/>\n                        </Redirect>\n                        </PrivateRoute>\n\n                        \n\n                        <PrivateRoute exact path={ROUTES.HOME}>\n                            <AllTodos/>\n                        </PrivateRoute>\n\n                        <PrivateRoute  exact path={ROUTES.TODOS + ROUTES.ACTIVE}>\n                            <ActiveTodos/>\n                        </PrivateRoute>\n\n                        <PrivateRoute  exact path={ROUTES.TODOS + ROUTES.COMPLETED}>\n                            <CompletedTodos/>\n                        </PrivateRoute>\n    \n                        <PublicRoute exact path={ROUTES.LOGIN}>\n                            <Login/>\n                        </PublicRoute>\n    \n                        <PublicRoute exact path={ROUTES.REGISTER}>\n                            <Register/>\n                        </PublicRoute>\n    \n                        <PrivateRoute exact path={ROUTES.LOGOUT}>\n                            <Logout/>\n                        </PrivateRoute>\n\n\n\n                    </Switch>\n                </Layout>\n            </Router>\n        );\n    }else{\n        return(\n           <Loader />\n        )\n    }\n \n}\n\nconst mapStateToProps = (ref) => {\n    return {\n        isFirebaseloaded: ref.firebase.isFirebaseloaded\n    }\n}\n\nexport default connect(mapStateToProps, {initFirebase})(App)\n"]},"metadata":{},"sourceType":"module"}