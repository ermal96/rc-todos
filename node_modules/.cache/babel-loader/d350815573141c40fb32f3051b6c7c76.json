{"ast":null,"code":"import _slicedToArray from\"/home/ermal/Documents/Personal/Projects/rc-todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/home/ermal/Documents/Personal/Projects/rc-todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n        margin-bottom:3rem;\\n        margin-top:3rem;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from'react';import{Form,Input,Button}from'antd';import{PlusOutlined}from'@ant-design/icons';import{addTodo}from'../../store/actions/todosActions';import*as firebase from'firebase';import{connect}from'react-redux';import styled from'styled-components';var AddForm=styled.div(_templateObject());var AddTodoForm=function AddTodoForm(_ref){var addTodo=_ref.addTodo,userId=_ref.userId;var _Form$useForm=Form.useForm(),_Form$useForm2=_slicedToArray(_Form$useForm,1),form=_Form$useForm2[0];var onFinish=function onFinish(e){if(!e.name)return;var newTodo={name:e.name,status:'ACTIVE',date:firebase.firestore.Timestamp.fromDate(new Date()),userId:userId};addTodo(newTodo);form.resetFields();};return/*#__PURE__*/React.createElement(AddForm,null,/*#__PURE__*/React.createElement(Form,{form:form,onFinish:onFinish,layout:\"inline\"},/*#__PURE__*/React.createElement(Form.Item,{name:\"name\",hasFeedback:true},/*#__PURE__*/React.createElement(Input,{allowClear:true,prefix:/*#__PURE__*/React.createElement(PlusOutlined,null),placeholder:\"Add Todo\"})),/*#__PURE__*/React.createElement(Form.Item,null,/*#__PURE__*/React.createElement(Button,{type:\"primary\",htmlType:\"submit\"},\"Add\"))));};var mapStateToProps=function mapStateToProps(ref){return{userId:ref.firebase.user.uid};};export default connect(mapStateToProps,{addTodo:addTodo})(AddTodoForm);","map":{"version":3,"sources":["/home/ermal/Documents/Personal/Projects/rc-todo/src/components/todos/AddTodoForm.js"],"names":["React","Form","Input","Button","PlusOutlined","addTodo","firebase","connect","styled","AddForm","div","AddTodoForm","userId","useForm","form","onFinish","e","name","newTodo","status","date","firestore","Timestamp","fromDate","Date","resetFields","mapStateToProps","ref","user","uid"],"mappings":"4hBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,MAAtB,KAAoC,MAApC,CACA,OAASC,YAAT,KAA6B,mBAA7B,CACA,OAASC,OAAT,KAAwB,kCAAxB,CACA,MAAO,GAAKC,CAAAA,QAAZ,KAA0B,UAA1B,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CAEA,GAAMC,CAAAA,OAAO,CAAGD,MAAM,CAACE,GAAV,mBAAb,CAKA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAuB,IAArBN,CAAAA,OAAqB,MAArBA,OAAqB,CAAZO,MAAY,MAAZA,MAAY,mBAExBX,IAAI,CAACY,OAAL,EAFwB,gDAEhCC,IAFgC,mBAIvC,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,CAAD,CAAO,CAEpB,GAAI,CAACA,CAAC,CAACC,IAAP,CAAc,OAEd,GAAMC,CAAAA,OAAO,CAAE,CACXD,IAAI,CAAED,CAAC,CAACC,IADG,CAEXE,MAAM,CAAG,QAFE,CAGXC,IAAI,CAAEd,QAAQ,CAACe,SAAT,CAAmBC,SAAnB,CAA6BC,QAA7B,CAAsC,GAAIC,CAAAA,IAAJ,EAAtC,CAHK,CAIXZ,MAAM,CAAEA,MAJG,CAAf,CAOAP,OAAO,CAACa,OAAD,CAAP,CAEAJ,IAAI,CAACW,WAAL,GACH,CAdD,CAgBA,mBACI,oBAAC,OAAD,mBACA,oBAAC,IAAD,EAAM,IAAI,CAAEX,IAAZ,CAAkB,QAAQ,CAAEC,QAA5B,CAAsC,MAAM,CAAC,QAA7C,eACI,oBAAC,IAAD,CAAM,IAAN,EACQ,IAAI,CAAC,MADb,CAEQ,WAAW,KAFnB,eAIa,oBAAC,KAAD,EAAO,UAAU,KAAjB,CAAkB,MAAM,cAAE,oBAAC,YAAD,MAA1B,CAA6C,WAAW,CAAC,UAAzD,EAJb,CADJ,cAQI,oBAAC,IAAD,CAAM,IAAN,mBACI,oBAAC,MAAD,EAAU,IAAI,CAAC,SAAf,CAAyB,QAAQ,CAAC,QAAlC,QADJ,CARJ,CADA,CADJ,CAkBH,CAtCD,CAwCA,GAAMW,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,GAAD,CAAS,CAC7B,MAAO,CACHf,MAAM,CAAEe,GAAG,CAACrB,QAAJ,CAAasB,IAAb,CAAkBC,GADvB,CAAP,CAGH,CAJD,CAMA,cAAetB,CAAAA,OAAO,CAACmB,eAAD,CAAkB,CAACrB,OAAO,CAAPA,OAAD,CAAlB,CAAP,CAAoCM,WAApC,CAAf","sourcesContent":["import React from 'react'\nimport { Form, Input, Button } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons'\nimport { addTodo } from '../../store/actions/todosActions'\nimport * as firebase from 'firebase'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components';\n\nconst AddForm = styled.div`\n        margin-bottom:3rem;\n        margin-top:3rem;\n`;\n\nconst AddTodoForm = ({addTodo, userId}) => {\n\n    const [form] = Form.useForm();\n\n    const onFinish = (e) => {\n\n        if( !e.name ) return;\n\n        const newTodo ={\n            name: e.name,\n            status : 'ACTIVE',\n            date: firebase.firestore.Timestamp.fromDate(new Date()),\n            userId: userId\n        }\n\n        addTodo(newTodo);\n\n        form.resetFields();\n    }\n\n    return (\n        <AddForm>\n        <Form form={form} onFinish={onFinish} layout=\"inline\" >\n            <Form.Item\n                    name=\"name\"\n                    hasFeedback\n                >\n                         <Input allowClear prefix={<PlusOutlined  />} placeholder=\"Add Todo\" />\n                    </Form.Item>\n\n            <Form.Item>\n                <Button   type=\"primary\" htmlType=\"submit\">\n                 Add \n                </Button>\n            </Form.Item>\n        </Form>\n    </AddForm>\n    )\n}\n\nconst mapStateToProps = (ref) => {\n    return {\n        userId: ref.firebase.user.uid\n    }\n}\n\nexport default connect(mapStateToProps, {addTodo})(AddTodoForm);\n"]},"metadata":{},"sourceType":"module"}