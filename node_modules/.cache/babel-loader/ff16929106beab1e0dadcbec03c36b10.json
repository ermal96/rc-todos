{"ast":null,"code":"import { Firebase, Firestore } from '../../config/firebase';\nimport { types } from './actionTypes';\nimport { SuccessMsg, ErrorMsg } from '../../utils/helpers/msg';\nexport const register = data => async dispatch => {\n  Firebase.auth().createUserWithEmailAndPassword(data.email, data.password).then(res => {\n    const user = Firebase.auth().currentUser;\n    user.updateProfile({\n      displayName: data.displayName\n    }).then(() => {\n      user.sendEmailVerification().then(() => {\n        SuccessMsg('Please verify your email');\n      }).catch(function (err) {\n        ErrorMsg(err.message);\n      });\n    }).catch(function (err) {\n      ErrorMsg(err.message);\n    });\n  }).catch(err => {\n    ErrorMsg(err.message);\n  });\n};\nexport const login = data => async dispatch => {\n  Firebase.auth().signInWithEmailAndPassword(data.email, data.password).then(res => {\n    SuccessMsg(`Welcome ${res.user.displayName}`);\n  }).catch(err => {\n    ErrorMsg(err.message);\n  });\n};\nexport const logout = () => async (dispatch, getState) => {\n  const name = getState().firebase.user.displayName;\n  Firebase.auth().signOut().then(() => {\n    SuccessMsg('Bye ' + name + ' see you soon ' + String.fromCharCode(0xD83D, 0xDE04));\n    dispatch({\n      type: types.LOGOUT,\n      payload: ''\n    });\n  }).catch(err => {\n    ErrorMsg(err.message);\n  });\n};\nexport const initFirebase = () => async dispatch => {\n  Firebase.auth().onAuthStateChanged(user => {\n    if (user) {\n      dispatch({\n        type: types.LOGIN_SUCCESS,\n        payload: user\n      });\n    }\n\n    dispatch({\n      type: types.FIREBASE_LOADED,\n      payload: true\n    });\n  });\n};\nexport const updateUser = data => async (dispatch, getState) => {\n  const userId = getState().firebase.user.uid;\n  const user = Firebase.auth().currentUser; // upddate email and send email confirmation to user\n\n  if (data.email) {\n    user.updateEmail(data.email).then(() => {\n      user.sendEmailVerification().then(() => {// Email sent.\n      }).catch(function (err) {\n        ErrorMsg(err.message);\n      });\n    }).catch(err => {\n      ErrorMsg(err.message);\n    });\n  }\n\n  if (data.password) {\n    user.updatePassword(data.password).then(() => {// Update successful.\n    }).catch(function (err) {\n      ErrorMsg(err.message);\n    });\n  }\n\n  Firestore.collection('users').doc(userId).get().then(res => {\n    dispatch({\n      type: types.FETCH_USER_PROFILE,\n      firstName: res.data().firstName,\n      lastName: res.data().lastName\n    });\n  });\n};","map":{"version":3,"sources":["/home/ermal/Documents/Personal/Projects/rc-todo/src/store/actions/authActions.js"],"names":["Firebase","Firestore","types","SuccessMsg","ErrorMsg","register","data","dispatch","auth","createUserWithEmailAndPassword","email","password","then","res","user","currentUser","updateProfile","displayName","sendEmailVerification","catch","err","message","login","signInWithEmailAndPassword","logout","getState","name","firebase","signOut","String","fromCharCode","type","LOGOUT","payload","initFirebase","onAuthStateChanged","LOGIN_SUCCESS","FIREBASE_LOADED","updateUser","userId","uid","updateEmail","updatePassword","collection","doc","get","FETCH_USER_PROFILE","firstName","lastName"],"mappings":"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","sourcesContent":["import {Firebase, Firestore} from '../../config/firebase'\nimport {types} from './actionTypes';\nimport {SuccessMsg, ErrorMsg} from '../../utils/helpers/msg'\n\nexport const register = (data) => async dispatch => {\n    Firebase.auth().createUserWithEmailAndPassword(data.email, data.password).then((res) => {\n\n        const  user = Firebase.auth().currentUser;\n\n        user.updateProfile({\n            displayName: data.displayName,\n          }).then(() => {\n\n            user.sendEmailVerification().then(() => {\n                SuccessMsg('Please verify your email')\n            }).catch(function(err) {\n                ErrorMsg(err.message)\n            });\n            \n          }).catch(function(err) {\n            ErrorMsg(err.message)\n          });\n\n        \n    }).catch(err => {\n        ErrorMsg(err.message)\n    })\n}\n\n\nexport const login = (data) => async dispatch => {\n    Firebase.auth().signInWithEmailAndPassword(data.email, data.password).then((res) => {  \n        \n        SuccessMsg(`Welcome ${res.user.displayName}`)\n\n    }).catch(err => {\n        ErrorMsg(err.message)\n    })\n}\n\n\nexport const logout = () => async (dispatch, getState) => {\n\n    const name  = getState().firebase.user.displayName\n\n    Firebase.auth().signOut().then(() => {\n        SuccessMsg('Bye ' + name + ' see you soon ' +  String.fromCharCode(0xD83D, 0xDE04))\n        dispatch({\n            type: types.LOGOUT,\n            payload: ''\n        })\n    }).catch(err => {\n        ErrorMsg(err.message)\n    })\n\n\n}\n\nexport const initFirebase = () => async dispatch => {\n\n    Firebase.auth().onAuthStateChanged((user) => {\n        if (user) {\n            dispatch({\n                type: types.LOGIN_SUCCESS,\n                payload: user\n            })\n        }\n\n        dispatch({\n            type: types.FIREBASE_LOADED,\n            payload: true\n        })\n\n\n      });\n}\n\n\n\n\nexport const updateUser = (data) => async (dispatch, getState) => {\n\n    const userId  = getState().firebase.user.uid;\n    const user = Firebase.auth().currentUser;\n\n\n    // upddate email and send email confirmation to user\n    if(data.email){\n        user.updateEmail(data.email).then(() =>  {\n            \n            user.sendEmailVerification().then(() => {\n                // Email sent.\n              }).catch(function(err) {\n                ErrorMsg(err.message)\n              });\n\n          }).catch((err) => {\n            ErrorMsg(err.message)\n          });\n    }\n\n\n    if(data.password){\n        user.updatePassword(data.password).then(() => {\n            // Update successful.\n          }).catch(function(err) {\n            ErrorMsg(err.message)\n          });\n    }\n\n    \n\n    Firestore.collection('users').doc(userId).get().then(res => {\n\n        dispatch({\n            type: types.FETCH_USER_PROFILE,\n            firstName: res.data().firstName,\n            lastName: res.data().lastName\n        })\n\n\n    })\n\n}"]},"metadata":{},"sourceType":"module"}