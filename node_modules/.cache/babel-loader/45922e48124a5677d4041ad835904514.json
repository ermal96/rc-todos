{"ast":null,"code":"import { Firebase, Firestore } from '../../config/firebase';\nimport { types } from './actionTypes';\nimport { SuccessMsg, ErrorMsg } from '../../utils/helpers/msg';\nexport const register = data => async dispatch => {\n  Firebase.auth().createUserWithEmailAndPassword(data.email, data.password).then(res => {\n    Firestore.collection(\"users\").doc(res.user.uid).set({\n      firstName: data.firstName,\n      lastName: data.lastName\n    }).then(() => {\n      var user = Firebase.auth().currentUser;\n      user.sendEmailVerification().then(function () {\n        dispatch({\n          type: types.REGISTER_SUCCESS\n        });\n        SuccessMsg('Successfully Registered, Please confirm your email account');\n      }).catch(function (error) {// An error happened.\n      });\n    });\n  }).catch(err => {\n    ErrorMsg(err.message);\n  });\n};\nexport const login = data => async dispatch => {\n  Firebase.auth().signInWithEmailAndPassword(data.email, data.password).then(res => {\n    const userId = res.user.uid;\n    Firestore.collection('users').doc(userId).get().then(res => {\n      const name = res.data().firstName;\n      SuccessMsg(`Welcome ${name}`);\n    });\n  }).catch(err => {\n    ErrorMsg(err.message);\n  });\n};\nexport const logout = () => async (dispatch, getState) => {\n  const userId = getState().firebase.user.uid;\n  Firestore.collection('users').doc(userId).get().then(res => {\n    const name = res.data().firstName;\n    Firebase.auth().signOut().then(() => {\n      SuccessMsg('Bye ' + name + ' see you soon ' + String.fromCharCode(0xD83D, 0xDE04));\n      dispatch({\n        type: types.LOGOUT,\n        payload: ''\n      });\n    }).catch(err => {\n      ErrorMsg(err.message);\n    });\n  });\n};\nexport const initFirebase = () => async dispatch => {\n  Firebase.auth().onAuthStateChanged(user => {\n    if (user) {\n      dispatch({\n        type: types.LOGIN_SUCCESS,\n        payload: user\n      });\n    }\n\n    dispatch({\n      type: types.FIREBASE_LOADED,\n      payload: true\n    });\n  });\n};\nexport const updateUser = data => async (dispatch, getState) => {\n  const userId = getState().firebase.user.uid;\n  const user = Firebase.auth().currentUser; // upddate email and send email confirmation to user\n\n  if (data.email) {\n    user.updateEmail(data.email).then(() => {\n      user.sendEmailVerification().then(() => {// Email sent.\n      }).catch(function (err) {\n        ErrorMsg(err.message);\n      });\n    }).catch(err => {\n      ErrorMsg(err.message);\n    });\n  }\n\n  if (data.password) {\n    user.updatePassword(data.password).then(() => {// Update successful.\n    }).catch(function (err) {\n      ErrorMsg(err.message);\n    });\n  }\n\n  Firestore.collection('users').doc(userId).get().then(res => {\n    dispatch({\n      type: types.FETCH_USER_PROFILE,\n      firstName: res.data().firstName,\n      lastName: res.data().lastName\n    });\n  });\n};","map":{"version":3,"sources":["/home/ermal/Documents/Personal/Projects/rc-todo/src/store/actions/authActions.js"],"names":["Firebase","Firestore","types","SuccessMsg","ErrorMsg","register","data","dispatch","auth","createUserWithEmailAndPassword","email","password","then","res","collection","doc","user","uid","set","firstName","lastName","currentUser","sendEmailVerification","type","REGISTER_SUCCESS","catch","error","err","message","login","signInWithEmailAndPassword","userId","get","name","logout","getState","firebase","signOut","String","fromCharCode","LOGOUT","payload","initFirebase","onAuthStateChanged","LOGIN_SUCCESS","FIREBASE_LOADED","updateUser","updateEmail","updatePassword","FETCH_USER_PROFILE"],"mappings":"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","sourcesContent":["import {Firebase, Firestore} from '../../config/firebase'\nimport {types} from './actionTypes';\nimport {SuccessMsg, ErrorMsg} from '../../utils/helpers/msg'\n\nexport const register = (data) => async dispatch => {\n    Firebase.auth().createUserWithEmailAndPassword(data.email, data.password).then((res) => {\n\n        Firestore.collection(\"users\").doc(res.user.uid).set({\n            firstName: data.firstName,\n            lastName: data.lastName\n        }).then(() => {\n            var user = Firebase.auth().currentUser;\n            user.sendEmailVerification().then(function() {\n                dispatch({type: types.REGISTER_SUCCESS})\n                SuccessMsg('Successfully Registered, Please confirm your email account')\n              }).catch(function(error) {\n                // An error happened.\n              });\n\n            \n        })\n        \n    }).catch(err => {\n        ErrorMsg(err.message)\n    })\n}\n\n\nexport const login = (data) => async dispatch => {\n    Firebase.auth().signInWithEmailAndPassword(data.email, data.password).then((res) => {  \n        const userId = res.user.uid;\n\n        Firestore.collection('users').doc(userId).get().then(res => {\n            const name  = res.data().firstName\n            SuccessMsg(`Welcome ${name}`)\n        })\n       \n    }).catch(err => {\n        ErrorMsg(err.message)\n    })\n}\n\n\nexport const logout = () => async (dispatch, getState) => {\n\n    const userId  = getState().firebase.user.uid\n\n    Firestore.collection('users').doc(userId).get().then(res => {\n\n        const name  = res.data().firstName\n\n        Firebase.auth().signOut().then(() => {\n            SuccessMsg('Bye ' + name + ' see you soon ' +  String.fromCharCode(0xD83D, 0xDE04))\n            dispatch({\n                type: types.LOGOUT,\n                payload: ''\n            })\n        }).catch(err => {\n            ErrorMsg(err.message)\n        })\n\n\n    })\n\n\n}\n\nexport const initFirebase = () => async dispatch => {\n\n    Firebase.auth().onAuthStateChanged((user) => {\n        if (user) {\n            dispatch({\n                type: types.LOGIN_SUCCESS,\n                payload: user\n            })\n        }\n\n        dispatch({\n            type: types.FIREBASE_LOADED,\n            payload: true\n        })\n\n\n      });\n}\n\n\n\n\nexport const updateUser = (data) => async (dispatch, getState) => {\n\n    const userId  = getState().firebase.user.uid;\n    const user = Firebase.auth().currentUser;\n\n\n    // upddate email and send email confirmation to user\n    if(data.email){\n        user.updateEmail(data.email).then(() =>  {\n            \n            user.sendEmailVerification().then(() => {\n                // Email sent.\n              }).catch(function(err) {\n                ErrorMsg(err.message)\n              });\n\n          }).catch((err) => {\n            ErrorMsg(err.message)\n          });\n    }\n\n\n    if(data.password){\n        user.updatePassword(data.password).then(() => {\n            // Update successful.\n          }).catch(function(err) {\n            ErrorMsg(err.message)\n          });\n    }\n\n    \n\n    Firestore.collection('users').doc(userId).get().then(res => {\n\n        dispatch({\n            type: types.FETCH_USER_PROFILE,\n            firstName: res.data().firstName,\n            lastName: res.data().lastName\n        })\n\n\n    })\n\n}"]},"metadata":{},"sourceType":"module"}