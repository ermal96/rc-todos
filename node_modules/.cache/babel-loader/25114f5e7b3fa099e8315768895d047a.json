{"ast":null,"code":"var _jsxFileName = \"/home/ermal/Documents/Personal/Projects/rc-todo/src/App.js\";\nimport React, { useEffect } from 'react';\nimport Layout from './containers/Layout';\nimport Login from './containers/auth/Login';\nimport Register from './containers/auth/Register';\nimport Logout from './containers/auth/Logout';\nimport { BrowserRouter as Router, Redirect } from \"react-router-dom\";\nimport PrivateRoute from './components/routes/PrivateRoute';\nimport PublicRoute from './components/routes/PublicRoute';\nimport * as ROUTES from './constants/routes';\nimport { connect } from 'react-redux';\nimport { initFirebase } from './store/actions/authActions';\nimport Loader from './components/styled/Loader';\nimport ActiveTodos from './containers/todos/ActiveTodos';\nimport AllTodos from './containers/todos/AllTodos';\nimport CompletedTodos from './containers/todos/CompletedTodos';\n\nconst App = ({\n  initFirebase,\n  isFirebaseloaded\n}) => {\n  useEffect(() => {\n    initFirebase();\n  }, [initFirebase]);\n\n  if (isFirebaseloaded) {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(PrivateRoute, {\n      exact: true,\n      path: ROUTES.TODOS,\n      component: AllTodos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Redirect, {\n      exact: true,\n      path: ROUTES.HOME,\n      component: AllTodos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(PrivateRoute, {\n      exact: true,\n      path: ROUTES.TODOS + ROUTES.ACTIVE,\n      component: ActiveTodos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(PrivateRoute, {\n      exact: true,\n      path: ROUTES.TODOS + ROUTES.COMPLETED,\n      component: CompletedTodos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(PublicRoute, {\n      exact: true,\n      path: ROUTES.LOGIN,\n      component: Login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(PublicRoute, {\n      exact: true,\n      path: ROUTES.REGISTER,\n      component: Register,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(PrivateRoute, {\n      exact: true,\n      path: ROUTES.LOGOUT,\n      component: Logout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 12\n      }\n    });\n  }\n};\n\nconst mapStateToProps = ref => {\n  return {\n    isFirebaseloaded: ref.firebase.isFirebaseloaded\n  };\n};\n\nexport default connect(mapStateToProps, {\n  initFirebase\n})(App);","map":{"version":3,"sources":["/home/ermal/Documents/Personal/Projects/rc-todo/src/App.js"],"names":["React","useEffect","Layout","Login","Register","Logout","BrowserRouter","Router","Redirect","PrivateRoute","PublicRoute","ROUTES","connect","initFirebase","Loader","ActiveTodos","AllTodos","CompletedTodos","App","isFirebaseloaded","TODOS","HOME","ACTIVE","COMPLETED","LOGIN","REGISTER","LOGOUT","mapStateToProps","ref","firebase"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport Layout from './containers/Layout';\nimport Login from './containers/auth/Login';\nimport Register from './containers/auth/Register';\nimport Logout from './containers/auth/Logout'\nimport {BrowserRouter as Router,  Redirect} from \"react-router-dom\";\nimport PrivateRoute  from './components/routes/PrivateRoute'\nimport PublicRoute  from './components/routes/PublicRoute'\nimport * as ROUTES from './constants/routes'\nimport { connect } from 'react-redux';\nimport { initFirebase } from './store/actions/authActions';\nimport Loader from './components/styled/Loader';\n\nimport ActiveTodos from './containers/todos/ActiveTodos';\nimport AllTodos from './containers/todos/AllTodos';\nimport CompletedTodos from './containers/todos/CompletedTodos';\n\nconst App = ({initFirebase, isFirebaseloaded}) => {\n\n    useEffect(() => {\n        initFirebase()\n    }, [initFirebase])\n\n    if(isFirebaseloaded){\n        return (\n            <Router>\n                <Layout>\n                        <PrivateRoute exact path={ROUTES.TODOS} component={AllTodos} />\n                        \n                        <Redirect exact path={ROUTES.HOME} component={AllTodos} />\n\n                        <PrivateRoute  exact path={ROUTES.TODOS + ROUTES.ACTIVE} component={ActiveTodos} />\n                           \n                        <PrivateRoute  exact path={ROUTES.TODOS + ROUTES.COMPLETED} component={CompletedTodos} />\n                           \n                        <PublicRoute   exact path={ROUTES.LOGIN} component={Login} />\n                            \n                        <PublicRoute   exact path={ROUTES.REGISTER} component={Register} />\n                           \n                        <PrivateRoute  exact path={ROUTES.LOGOUT} component={Logout} />  \n                </Layout>\n            </Router>\n        );\n    }else{\n        return(\n           <Loader />\n        )\n    }\n \n}\n\nconst mapStateToProps = (ref) => {\n    return {\n        isFirebaseloaded: ref.firebase.isFirebaseloaded\n    }\n}\n\nexport default connect(mapStateToProps, {initFirebase})(App)\n"]},"metadata":{},"sourceType":"module"}