{"version":3,"sources":["logo.svg","containers/nav/Logo.js","containers/nav/NavItem.js","containers/nav/Nav.js","constants/routes.js","containers/nav/index.js","components/styled/MainContainer.js","containers/Layout.js","config/firebase.js","store/actions/actionTypes.js","utils/helpers/msg.js","components/auth/LoginForm.js","store/actions/authActions.js","components/styled/AuthContainer.js","containers/auth/Login.js","components/auth/RegisterForm.js","containers/auth/Register.js","containers/auth/Logout.js","components/routes/PrivateRoute.js","components/routes/PublicRoute.js","components/styled/Loader.js","components/profile/Intro.js","containers/profile/UpdateProfileForm.js","containers/profile/Profile.js","store/actions/todosActions.js","utils/todos/removeTodo.js","utils/todos/moveTodo.js","constants/filter.js","components/todos/TodoList.js","components/todos/AddTodoForm.js","containers/todos/FilterMenu.js","containers/todos/ActiveTodos.js","containers/todos/AllTodos.js","containers/todos/CompletedTodos.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/todosReducer.js","store/reducers/index.js","store/index.js","index.js"],"names":["module","exports","LogoWrapper","styled","div","Logo","src","logo","alt","NavItemWrapper","span","activeStyle","color","borderBottom","connect","ref","hasPermission","firebase","isAuthenticated","link","name","isPrivate","isPublic","icon","exact","to","Nav","mode","BarsOutlined","UserOutlined","ExportOutlined","EditOutlined","NavWrapper","Navigation","Container","MainContainer","children","Layout","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firestore","firestore","Firebase","types","ErrorMsg","msg","message","error","SuccessMsg","success","login","data","dispatch","a","auth","signInWithEmailAndPassword","email","password","then","res","user","displayName","catch","err","className","onFinish","e","Item","rules","required","prefix","placeholder","LockOutlined","type","htmlType","Conatiner","AuthContainer","Signin","register","createUserWithEmailAndPassword","currentUser","updateProfile","sendEmailVerification","hasFeedback","allowClear","InboxOutlined","Register","logout","getState","signOut","String","fromCharCode","payload","useEffect","path","component","LoaderWrapper","Loader","IntroWrapper","Intro","UpdateProfileFormrapper","userMeta","updateUser","updateEmail","updatePassword","console","log","ProfileWrapper","fetchTodos","status","userId","uid","loading","collection","where","orderBy","get","forEach","item","doc","id","push","RemoveTodo","deleteTodo","placement","title","onClick","DeleteTwoTone","twoToneColor","MoveTodo","moveTodo","isActive","RollbackOutlined","CheckOutlined","TodoListWrapper","ListIndex","h4","todos","removeTodo","delete","update","location","useLocation","itemLayout","dataSource","renderItem","index","key","Meta","pathname","renderBtn","AddForm","addTodo","newToDo","add","docRef","Form","useForm","form","newTodo","date","Timestamp","fromDate","Date","resetFields","layout","PlusOutlined","FilterMenu","DatabaseOutlined","PlayCircleOutlined","CarryOutOutlined","items","isFirebaseloaded","initFirebase","onAuthStateChanged","AllTodos","ActiveTodos","CompletedTodos","Profile","Login","Logout","Boolean","window","hostname","match","inittialState","combineReducers","state","action","Object","assign","concat","filter","composeEnhancer","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7da71e5e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.eb959cde.svg\";","import React from 'react'\nimport logo from '../../logo.svg'\nimport styled from 'styled-components';\n\n\nconst LogoWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    h2{\n        margin: 0;\n        padding-left: 20px;\n        @media(max-width: 560px){\n        display:none\n    }\n    }\n\n    img{\n        height: 40px;\n    }\n`;\n\nconst Logo = () => {\n    return (\n        <LogoWrapper>\n                <img src={logo}  alt=\"Logo\"/>\n                <h2>Todo App</h2>\n        </LogoWrapper>\n    )\n}\n\nexport default Logo\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport {NavLink} from \"react-router-dom\"\nimport styled from 'styled-components'\n\nconst NavItemWrapper = styled.span`\n    padding:  0 15px;\n    @media(max-width: 560px){\n        padding:0 5px;\n    }\n    a{\n        color: unset;\n        display: inline-flex;\n        align-items: center;\n        padding: 0 8px;\n        span{\n            margin-right:5px\n        }\n\n    }\n`;\n\nconst activeStyle = {\n        color: '#1890ff',\n        borderBottom: '2px solid #1890ff'\n}\n\nconst NavItem = ({hasPermission, link, name, isPrivate, isPublic, icon}) => {\n\n\n    const renderItem  = () => {\n        if(isPrivate){\n            if(hasPermission){\n              return(\n                <NavItemWrapper>\n                    <NavLink exact activeStyle={activeStyle} to={link}>{icon} {name}</NavLink>\n                </NavItemWrapper>\n              )\n            }else{\n                return null\n            }\n        }else if(isPublic){\n            if(! hasPermission){\n                return(\n                  <NavItemWrapper >\n                      <NavLink exact activeStyle={activeStyle} to={link}>{icon} {name}</NavLink>\n                  </NavItemWrapper>\n                )\n              }else{\n                  return null\n              }\n        }\n    } \n    return renderItem();\n}\n\n\nconst mapStateToProps = (ref) => {\n    return {\n        hasPermission: ref.firebase.isAuthenticated\n    }\n}\n\nexport default connect(mapStateToProps, {})(NavItem)\n","import React from 'react'\nimport {Menu} from 'antd';\nimport {BarsOutlined, UserOutlined, ExportOutlined, EditOutlined} from '@ant-design/icons';\nimport * as ROUTES from '../../constants/routes'\nimport NavItem from './NavItem';\n\nconst Nav = () => {\n    return (\n       \n            <Menu mode=\"horizontal\">\n               <NavItem isPrivate icon={<BarsOutlined/>} link={ROUTES.HOME} name=\"Todos\" />\n               <NavItem isPrivate icon={<UserOutlined/>} link={ROUTES.PROFILE} name=\"Profile\" />\n               <NavItem isPublic  icon={<ExportOutlined/>} link={ROUTES.LOGIN} name=\"Login\" />\n               <NavItem isPublic  icon={<EditOutlined/>}link={ROUTES.REGISTER} name=\"Register\" />\n               <NavItem isPrivate icon={<ExportOutlined/>} link={ROUTES.LOGOUT} name=\"Logout\" />\n\n            </Menu>\n    )\n}\n\n\n\nexport default Nav\n","export const HOME = '/';\nexport const REGISTER = '/register';\nexport const LOGIN = '/login';\nexport const PROFILE = '/profile';\nexport const LOGOUT = '/logout';\nexport const COMPLETED = '/completed';\nexport const ACTIVE = '/active'\n","import React from 'react'\nimport Logo from './Logo';\nimport Nav from './Nav'\nimport styled from 'styled-components';\n\nconst NavWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n`;\n\n\n\nconst Navigation = () => {\n    return (\n        <NavWrapper>\n            <Logo />\n            <Nav/>\n        </NavWrapper>\n    )\n}\n\nexport default Navigation\n","import React from 'react'\nimport styled from 'styled-components';\nconst Container = styled.div`\nmax-width: 1200px;\n    width: 100%;\n    margin: 2rem auto;\n    min-height: 100vh;\n    background: #fff;\n    padding: 3rem;\n    border: 1px solid #ededed;\n    border-radius: 4px;\n    box-shadow: 0px 0px 10px -5px #ededed;\n    @media(max-width: 1300px){\n        margin:0 auto;\n        padding:1rem;\n        border:none;\n        width:100%;\n    }\n\n`;\n\nconst MainContainer = ({children}) => {\n    return (\n        <Container>{children}</Container>\n    )\n}\n\nexport default MainContainer\n","import React from 'react'\nimport Navigation from './nav'\nimport MainContainer from '../components/styled/MainContainer';\n\nconst Layout = ({children}) => {\n    return (\n        <MainContainer>\n            <Navigation/>\n            {children}\n        </MainContainer>\n    )\n}\n\nexport default Layout\n","import firebase from 'firebase/app';\nimport 'firebase/auth'\nimport 'firebase/firestore'\n\nconst config = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DB_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_ID,\n    measurementId: process.env.REACT_APP_MESUREMENT_ID\n};\n\nfirebase.initializeApp(config);\nexport const Firestore = firebase.firestore();\nexport const Firebase = firebase;\n","export const types = {\n    FETCH_TODOS: 'FETCH_TODOS',\n    USER_NAME_UPDATED: 'USER_NAME_UPDATED',\n    USER_PASSWORD_UPDATED: 'USER_PASSWORD_UPDATED',\n    USER_EMAIL_UPDATED: 'USER_EMAIL_UPDATED',\n    VISIBILITY_FILTER: 'VISIBILITY_FILTER',\n    ADD_TODO: 'ADD_TODO',\n    DELETE_TODO: 'DELETE_TODO',\n    MOVE_TODO: 'MOVE_TODO',\n    LOADING: 'LOADING',\n    LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n    REGISTER_SUCCESS: 'REGISTER_SUCCESS',\n    FIREBASE_LOADED: 'FIREBASE_LOADED',\n    LOGOUT: 'LOGOUT'\n}\n","import { message } from 'antd';\n\n\nexport const ErrorMsg = (msg) => {\n    return message.error(msg);\n}\n\nexport const SuccessMsg = (msg) => {\n    return message.success(msg);\n}\n","import React from 'react'\nimport { Form, Input, Button } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { connect } from 'react-redux';\nimport { login } from '../../store/actions/authActions'\n\nconst LoginForm = ({login}) => {\n\n    const onFinish = (e) => {\n        login({\n            email: e.email,\n            password: e.password\n        })\n    }\n\n    return (\n        <div className=\"login-from\">\n                   <Form\n                    name=\"normal_login\"\n                    className=\"login-form\"\n                    onFinish={onFinish}\n                     >\n                    <Form.Item\n                        name=\"email\"\n                        rules={[{ required: true, message: 'Please input your email!' }]}\n                    >\n                         <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Email\" />\n                    </Form.Item>\n                    \n                    <Form.Item\n                        name=\"password\"\n                        rules={[{ required: true, message: 'Please input your Password!' }]}\n                    >\n                    <Input\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                    />\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                        Log in\n                        </Button>\n                    </Form.Item>\n             </Form>\n        </div>\n    )\n}\n\nexport default connect(null, {login})(LoginForm)\n","import {Firebase} from '../../config/firebase'\nimport {types} from './actionTypes';\nimport {SuccessMsg, ErrorMsg} from '../../utils/helpers/msg'\n\nexport const register = (data) => async dispatch => {\n    Firebase.auth().createUserWithEmailAndPassword(data.email, data.password).then((res) => {\n\n        const  user = Firebase.auth().currentUser;\n\n        user.updateProfile({\n            displayName: data.displayName,\n          }).then(() => {\n\n            user.sendEmailVerification().then(() => {\n                SuccessMsg('Please verify your email')\n            }).catch(function(err) {\n                ErrorMsg(err.message)\n            });\n            \n          }).catch(function(err) {\n            ErrorMsg(err.message)\n          });\n\n        \n    }).catch(err => {\n        ErrorMsg(err.message)\n    })\n}\n\n\nexport const login = (data) => async dispatch => {\n    Firebase.auth().signInWithEmailAndPassword(data.email, data.password).then((res) => {  \n        \n        SuccessMsg(`Welcome ${res.user.displayName}`)\n\n    }).catch(err => {\n        ErrorMsg(err.message)\n    })\n}\n\n\nexport const logout = () => async (dispatch, getState) => {\n\n    const name  = getState().firebase.user.displayName\n\n    Firebase.auth().signOut().then(() => {\n        SuccessMsg('Bye ' + name + ' see you soon ' +  String.fromCharCode(0xD83D, 0xDE04))\n        dispatch({\n            type: types.LOGOUT,\n            payload: ''\n        })\n    }).catch(err => {\n        ErrorMsg(err.message)\n    })\n}\n\nexport const initFirebase = () => async dispatch => {\n\n    Firebase.auth().onAuthStateChanged((user) => {\n        if (user) {\n            dispatch({\n                type: types.LOGIN_SUCCESS,\n                payload: user\n            })\n        }\n\n        dispatch({\n            type: types.FIREBASE_LOADED,\n            payload: true\n        })\n\n\n      });\n}\n\n\nexport const updateUser = (data) => async (dispatch) => {\n\n    const user = Firebase.auth().currentUser;\n\n\n    if(data.displayName || data.password || data.email ){\n\n        // update email if user provide a email && send email confirmation to user\n    if(data.email){\n        user.updateEmail(data.email).then(() =>  {\n            \n            user.sendEmailVerification().then(() => {\n                dispatch({\n                    type: types.USER_EMAIL_UPDATED,\n                    payload: data.email\n                })\n              }).catch(function(err) {\n                ErrorMsg(err.message)\n              });\n\n          }).catch((err) => {\n            ErrorMsg(err.message)\n          });\n    }\n\n\n    //update password if user provide a password\n    if(data.password){\n        user.updatePassword(data.password).then(() => {\n            dispatch({\n                type: types.USER_PASSWORD_UPDATED,\n            })\n          }).catch(function(err) {\n            ErrorMsg(err.message)\n          });\n    }\n\n\n    // update name  if user provode it\n    if(data.displayName){\n        user.updateProfile({\n            displayName: data.displayName,\n          }).then(() => {\n            dispatch({\n                type: types.USER_NAME_UPDATED,\n                payload: data.displayName\n            })\n          }).catch(function(err) {\n            ErrorMsg(err.message)\n          });\n    }\n\n\n\n        SuccessMsg('Successfully updated')\n\n    }\n\n\n\n\n\n}","import React from 'react'\nimport styled from 'styled-components'\n\nconst Conatiner = styled.div`\n    max-width: 315px;\n    margin-top:3rem;\n    h2{\n        margin-bottom:2rem\n    }\n`;\n\nconst AuthContainer = ({children}) => {\n    return (\n       <Conatiner>{children}</Conatiner>\n    )\n}\n\nexport default AuthContainer\n","import React from 'react'\nimport LoginForm from '../../components/auth/LoginForm'\nimport AuthContainer from '../../components/styled/AuthContainer'\n\nconst Signin = () => {\n    return (\n        <AuthContainer>\n            <h2>Login\n            </h2>\n            <LoginForm/>\n        </AuthContainer>\n    )\n}\n\nexport default Signin\n","import React from 'react'\nimport {Form, Input, Button} from 'antd';\nimport {UserOutlined, LockOutlined, InboxOutlined} from '@ant-design/icons';\nimport {connect} from 'react-redux';\nimport {register} from '../../store/actions/authActions'\n\nconst RegisterForm = ({register}) => {\n\n    const onFinish = (e) => {\n        register({displayName: e.displayName, email: e.email, password: e.password})\n    }\n    return (\n        <div className=\"register-from\">\n            <Form onFinish={onFinish}>\n\n                <Form.Item hasFeedback name=\"displayName\"\n                    rules={\n                        [{\n                                required: true,\n                                message: 'Please input your name!'\n                            }]\n                }>\n                    <Input prefix={<UserOutlined/>}\n                        placeholder=\"Your Name\"\n                        allowClear/>\n                </Form.Item>\n\n\n                <Form.Item hasFeedback name=\"email\"\n                    rules={\n                        [{\n                                required: true,\n                                message: 'Please input your email!'\n                            }]\n                }>\n                    <Input prefix={<InboxOutlined/>}\n                        placeholder=\"Email\"\n                        type=\"email\"\n                        allowClear/>\n                </Form.Item>\n\n                <Form.Item hasFeedback name=\"password\"\n                    rules={\n                        [{\n                                required: true,\n                                message: 'Please input your Password!'\n                            }]\n                }>\n                    <Input prefix={<LockOutlined/>}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        allowClear/>\n                </Form.Item>\n\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                        Register\n                    </Button>\n                </Form.Item>\n            </Form>\n        </div>\n    )\n}\n\n\nexport default connect(null, {register})(RegisterForm)\n","import React from 'react'\nimport RegisterForm from '../../components/auth/RegisterForm'\nimport AuthContainer from '../../components/styled/AuthContainer'\n\n\nconst Register = () => {\n    return (\n        <AuthContainer>\n            <h2>Register</h2>\n            <RegisterForm/>\n        </AuthContainer>\n    )\n}\n\nexport default Register\n","import  {useEffect} from 'react'\nimport { connect } from 'react-redux'\nimport { logout } from '../../store/actions/authActions'\n\nconst Logout = ({logout}) => {\n    useEffect(() => {\n        logout();\n    }, [logout])\n\n    return null\n}\n\nexport default connect(null, {logout})(Logout)\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { LOGIN } from '../../constants/routes';\n\nconst PrivateRoute = ({ path, to, isAuthenticated, component}) => {\n    return (\n        isAuthenticated ? <Route to={to} path={path} component={component} />:\n             <Redirect to={LOGIN} /> \n    )\n        \n};\n\nconst mapStateToProps = (ref) => {\n    return {\n        isAuthenticated: ref.firebase.isAuthenticated\n    }\n}\n\nexport default connect(mapStateToProps, {})(PrivateRoute);","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { HOME } from '../../constants/routes'\n\nconst PublicRoute = ({ path, to, isAuthenticated, component}) => {\n    return (\n        ! isAuthenticated ? <Route to={to} path={path} component={component} /> :\n           <Redirect to={HOME} />\n    )\n};\n\nconst mapStateToProps = (ref) => {\n    return {\n        isAuthenticated: ref.firebase.isAuthenticated\n    }\n}\n\nexport default connect(mapStateToProps, {})(PublicRoute);","import React from 'react'\nimport { Spin } from 'antd';\nimport styled from 'styled-components'\nconst LoaderWrapper = styled.div`\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n`;\nconst Loader = () => {\n    return (\n        <LoaderWrapper>\n            <Spin />\n        </LoaderWrapper>\n    )\n}\n\nexport default Loader\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst IntroWrapper = styled.div`\n\n    border: 2px dashed #ededed;\n    padding: 25px;\n\n`;\n\nconst Intro = ({name}) => {\n    return (\n        <IntroWrapper>\n            <h2>Welcome {name ? name: null}</h2>\n            <p>Here you can change your profile</p>\n        </IntroWrapper>\n    )\n}\n\nexport default Intro\n","import React from 'react'\nimport {Form, Input, Button} from 'antd';\nimport {UserOutlined, LockOutlined, InboxOutlined} from '@ant-design/icons';\nimport {connect} from 'react-redux';\nimport styled from 'styled-components';\nimport { updateUser } from '../../store/actions/authActions';\n\nconst UpdateProfileFormrapper = styled.div`\n\n    margin:3rem 0;\n    h3{\n        margin-bottom:1.5rem;\n    }\n\n`;\n\nconst UpdateProfileForm = ({userMeta, updateUser}) => {\n\n    const onFinish = (e) => {\n       console.log(e)\n       updateUser({\n        displayName: e.displayName,\n        password: e.password, \n        email: e.email\n       });\n    }\n    return (\n        <UpdateProfileFormrapper>\n        <h3>Update Your Profile</h3>\n            <Form onFinish={onFinish}>\n\n                <Form.Item hasFeedback name=\"displayName\">\n                    <Input prefix={<UserOutlined/>}\n                         placeholder={userMeta.displayName ? userMeta.displayName : 'Your Name'}\n                        allowClear/>\n                </Form.Item>\n\n\n                <Form.Item hasFeedback name=\"email\">\n                    <Input prefix={<InboxOutlined/>}\n                        placeholder={userMeta.email ? userMeta.email : 'Email'}\n                        type=\"email\"\n                        allowClear/>\n                </Form.Item>\n\n                <Form.Item hasFeedback name=\"password\">\n                    <Input prefix={<LockOutlined/>}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        allowClear/>\n                </Form.Item>\n\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                        Update\n                    </Button>\n                </Form.Item>\n            </Form>\n        </UpdateProfileFormrapper>\n    )\n}\n\nconst mapStateToProps = (ref) => {\n    return {\n        userMeta: ref.firebase.user,\n    }\n}\n\n\nexport default connect(mapStateToProps, {updateUser})(UpdateProfileForm)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux';\nimport Intro from '../../components/profile/Intro';\nimport UpdateProfileForm from './UpdateProfileForm';\n\nconst ProfileWrapper = styled.div`\n    margin:3rem 0;\n`;\n\nconst Profile = ({ userMeta}) => {\n\n    return (\n        <ProfileWrapper>\n            <Intro name={userMeta.displayName}/>\n                <UpdateProfileForm />\n        </ProfileWrapper>\n    )\n}\n\nconst mapStateToProps = (ref) => {\n    return {\n        userMeta: ref.firebase.user\n    }\n}\n\nexport default connect(mapStateToProps, {})(Profile)\n","import {Firestore} from '../../config/firebase'\nimport {types} from './actionTypes';\nimport {SuccessMsg, ErrorMsg} from '../../utils/helpers/msg'\n\n// Add Todo\nexport const addTodo = newToDo => async dispatch => {\n\n    Firestore.collection('todos').add(newToDo).then(docRef => {\n        let data = null\n        data = {\n            ...newToDo,\n            id: docRef.id\n        }\n         dispatch({\n            type: types.ADD_TODO, \n            payload: data,\n        });\n\n        SuccessMsg('Added successfully')\n\n    }).catch(err => {\n        ErrorMsg(err.message)\n    })\n\n};\n\n\n// Remove Todo\nexport const removeTodo = id => async dispatch => {\n    Firestore.collection('todos').doc(id).delete().then(() => {\n        SuccessMsg('Deleted successfully')\n        dispatch({\n            type: types.DELETE_TODO, \n            payload: id\n        });\n    }).catch((err) => {\n        ErrorMsg(err.message)\n    });\n\n\n};\n\n\n// Move Todo\nexport const moveTodo = (id, status) => async dispatch => {\n    Firestore.collection('todos').doc(id).update({status: status}).then(() => {\n        console.log(status)\n        if (status === 'ACTIVE') {\n            SuccessMsg('Moved to active ')\n        } else if(status === 'COMPLETED') {\n            SuccessMsg('Moved to completed ')\n        }\n        dispatch({\n            type: types.MOVE_TODO, \n            payload: id\n        })\n    }).catch((err) => {\n        ErrorMsg(err.message)\n    });\n};\n\n\n// Fetch active todos from firebase\nexport const fetchTodos = (status) => async (dispatch, getState) => {\n\n    let data = [];\n\n    const userId = getState().firebase.user.uid;\n\n    dispatch({\n        type: types.FETCH_TODOS, \n        loading: true\n    });\n\n    if(status){\n        Firestore.collection('todos').where(\"status\", \"==\", status ).where(\"userId\", \"==\", userId).orderBy('date', 'desc').get().then(res => {  \n\n            res.forEach(item => {\n                const doc = {\n                    ...item.data(),\n                    id: item.id\n                };\n                data.push(doc);\n\n            })\n\n            dispatch({\n                type: types.FETCH_TODOS, \n                payload: data,\n                loading: false\n            });\n\n        })\n    } else{\n        Firestore.collection('todos').where(\"userId\", \"==\", userId).orderBy('date', 'desc').get().then(res => {  \n\n            res.forEach(item => {\n                const doc = {\n                    ...item.data(),\n                    id: item.id\n                };\n                data.push(doc);\n\n            })\n\n            dispatch({\n                type: types.FETCH_TODOS, \n                payload: data,\n                loading: false\n            });\n\n        })\n    }\n\n\n};\n","import { Button, Tooltip } from 'antd';\nimport { DeleteTwoTone } from '@ant-design/icons';\nimport React from 'react'\n\nconst RemoveTodo = ({ deleteTodo}) => {\n    return (\n        <Tooltip placement=\"top\" title=\"Delete Todo\">\n             <Button type=\"link\" onClick={deleteTodo}><DeleteTwoTone twoToneColor=\"#f5222d\" /></Button>\n        </Tooltip>\n    )\n}\n\nexport default RemoveTodo;\n","import { Button, Tooltip } from 'antd';\nimport { CheckOutlined, RollbackOutlined } from '@ant-design/icons';\n\nimport React from 'react'\n\nimport * as Filter from '../../constants/filter'\n\nconst MoveTodo = ({ moveTodo, isActive}) => {\n\n    return (\n        <Tooltip placement=\"top\" title={ isActive === Filter.COMPLETED ? 'Move To Active': 'Move To Completed' }>\n             <Button type=\"link\" onClick={moveTodo} >\n                { isActive === Filter.COMPLETED ? <RollbackOutlined />:  <CheckOutlined />  }\n             </Button>\n        </Tooltip>\n    )\n}\n\n\nexport default MoveTodo\n\n","export const ACTIVE = 'ACTIVE';\nexport const COMPLETED = 'COMPLETED';\nexport const ALL = 'ALL';\n","import React from 'react'\nimport {List, Tag} from 'antd';\nimport {connect} from 'react-redux';\nimport {removeTodo, moveTodo} from '../../store/actions/todosActions';\nimport RemoveTodo from '../../utils/todos/removeTodo';\nimport MoveTodo from '../../utils/todos/moveTodo';\nimport styled from 'styled-components'\nimport { useLocation } from \"react-router-dom\";\nimport { HOME } from '../../constants/routes'\n\nconst TodoListWrapper = styled.div`\n    margin: 2rem 0;\n`;\n\nconst ListIndex = styled.h4`\n\n    margin-right: 20px;\n    width: 20px;\n    display: flex;\n    height: 20px;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    background: #1a90ff;\n    border-radius: 3px;\n    color: #fff;\n    font-size: 13px;\n\n`;\n\nconst TodoList = ({\n    data,\n    moveTodo,\n    removeTodo,\n    loading\n}) => {\n\n    let location = useLocation();\n\n    const renderBtn = (item) => {\n        if( location.pathname === HOME){\n            return(\n                <Tag color={item.status === 'ACTIVE' ? 'red': 'green' }>{item.status}</Tag>\n            )\n        }else {\n            return(\n                <>\n                     <MoveTodo \n                            isActive={item.status} \n                            moveTodo={ () => moveTodo(item.id, item.status  === 'ACTIVE' ? 'COMPLETED': 'ACTIVE') }/>\n                     <RemoveTodo \n                            deleteTodo={ () => removeTodo(item.id) }/>\n                </>\n            )\n        }\n    }\n\n    return (\n        <TodoListWrapper >\n            <List   \n                loading={loading}\n                itemLayout=\"horizontal\"\n                dataSource={data}\n                renderItem={\n                    (item, index) => (\n                        <List.Item key={\n                            item.id\n                        }>\n                            <ListIndex>{index + 1}</ListIndex>\n                            <List.Item.Meta title={\n                                item.name\n                            }/>\n                            {renderBtn(item)}\n                        </List.Item>\n                    )\n                }/>\n        </TodoListWrapper>\n    )\n}\n\nconst mapStateToProps = (ref) => {\n    return { loading: ref.todos.loading};\n}\n\n\nexport default connect(mapStateToProps, {removeTodo, moveTodo})(TodoList)\n","import React from 'react'\nimport { Form, Input, Button } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons'\nimport { addTodo } from '../../store/actions/todosActions'\nimport * as firebase from 'firebase'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components';\n\nconst AddForm = styled.div`\n        margin-bottom:3rem;\n        margin-top:3rem;\n`;\n\nconst AddTodoForm = ({addTodo, userId}) => {\n\n    const [form] = Form.useForm();\n\n    const onFinish = (e) => {\n\n        if( !e.name ) return;\n\n        const newTodo ={\n            name: e.name,\n            status : 'ACTIVE',\n            date: firebase.firestore.Timestamp.fromDate(new Date()),\n            userId: userId\n        }\n\n        addTodo(newTodo);\n\n        form.resetFields();\n    }\n\n    return (\n        <AddForm>\n        <Form form={form} onFinish={onFinish} layout=\"inline\" >\n            <Form.Item\n                    name=\"name\"\n                    hasFeedback\n                >\n                         <Input allowClear prefix={<PlusOutlined  />} placeholder=\"Add Todo\" />\n                    </Form.Item>\n\n            <Form.Item>\n                <Button   type=\"primary\" htmlType=\"submit\">\n                 Add \n                </Button>\n            </Form.Item>\n        </Form>\n    </AddForm>\n    )\n}\n\nconst mapStateToProps = (ref) => {\n    return {\n        userId: ref.firebase.user.uid\n    }\n}\n\nexport default connect(mapStateToProps, {addTodo})(AddTodoForm);\n","import React from 'react'\nimport {Menu} from 'antd';\nimport * as ROUTES from '../../constants/routes'\nimport {DatabaseOutlined, CarryOutOutlined, PlayCircleOutlined} from '@ant-design/icons';\nimport NavItem from '../nav/NavItem';\n\n\nconst FilterMenu = () => {\n    \n    return (\n        <Menu mode=\"horizontal\">\n        \n        <NavItem isPrivate link={ROUTES.HOME} icon={<DatabaseOutlined />} name=\"All\"/>\n        <NavItem isPrivate link={ROUTES.ACTIVE} icon={<PlayCircleOutlined />} name=\"Active\"/>\n        <NavItem isPrivate link={ROUTES.COMPLETED} icon={<CarryOutOutlined />} name=\"Completed\"/>\n\n    </Menu>\n    )\n}\n\n\nexport default FilterMenu\n","import React, {useEffect} from 'react'\nimport TodoList from '../../components/todos/TodoList';\nimport {connect} from 'react-redux';\nimport {fetchTodos} from '../../store/actions/todosActions';\nimport AddTodoForm from '../../components/todos/AddTodoForm';\nimport FilterMenu from './FilterMenu';\nimport { ACTIVE } from '../../constants/filter';\n\nconst ActiveTodos = ({fetchTodos, todos}) => {\n\n    useEffect(() => {\n        fetchTodos(ACTIVE);\n       return () => {\n           fetchTodos(ACTIVE)\n       }\n   }, [fetchTodos])\n\n\n    return (\n            <>\n                <AddTodoForm />\n                <FilterMenu />\n                <TodoList data={todos}/>\n            </>\n    )\n}\n\nconst mapStateToProps = (ref) => {\n    return {todos: ref.todos.items};\n}\n\nexport default connect(mapStateToProps, {fetchTodos})(ActiveTodos)\n","import React, {useEffect} from 'react'\nimport TodoList from '../../components/todos/TodoList';\nimport {connect} from 'react-redux';\nimport {fetchTodos} from '../../store/actions/todosActions';\nimport AddTodoForm from '../../components/todos/AddTodoForm';\nimport FilterMenu from './FilterMenu';\n\nconst AllTodos = ({fetchTodos, todos}) => {\n\n\n    useEffect(() => {\n         fetchTodos();\n        return () => {\n            fetchTodos()\n        }\n    }, [fetchTodos])\n\n    return (\n        <>\n        <AddTodoForm/>\n        <FilterMenu />\n        <TodoList data={todos}/>\n        </>\n    )\n}\n\nconst mapStateToProps = (ref) => {\n    return {todos: ref.todos.items};\n}\n\nexport default connect(mapStateToProps, {fetchTodos})(AllTodos)\n","import React, {useEffect} from 'react'\nimport TodoList from '../../components/todos/TodoList';\nimport {connect} from 'react-redux';\nimport {fetchTodos} from '../../store/actions/todosActions';\nimport AddTodoForm from '../../components/todos/AddTodoForm';\nimport FilterMenu from './FilterMenu';\nimport { COMPLETED } from '../../constants/filter';\n\nconst CompletedTodos = ({fetchTodos, todos}) => {\n\n    useEffect(() => {\n        fetchTodos(COMPLETED);\n       return () => {\n           fetchTodos(COMPLETED)\n       }\n   }, [fetchTodos])\n\n    return (\n            <>\n                <AddTodoForm />\n                <FilterMenu />\n                <TodoList data={todos}/>\n            </>\n    )\n}\n\nconst mapStateToProps = (ref) => {\n    return {todos: ref.todos.items};\n}\n\nexport default connect(mapStateToProps, {fetchTodos})(CompletedTodos)\n","import React, { useEffect } from 'react';\nimport Layout from './containers/Layout';\nimport Login from './containers/auth/Login';\nimport Register from './containers/auth/Register';\nimport Logout from './containers/auth/Logout'\nimport {BrowserRouter as Router, Switch} from \"react-router-dom\";\nimport PrivateRoute  from './components/routes/PrivateRoute'\nimport PublicRoute  from './components/routes/PublicRoute'\nimport * as ROUTES from './constants/routes'\nimport { connect } from 'react-redux';\nimport { initFirebase } from './store/actions/authActions';\nimport Loader from './components/styled/Loader';\n\nimport Profile from './containers/profile/Profile'\nimport ActiveTodos from './containers/todos/ActiveTodos';\nimport AllTodos from './containers/todos/AllTodos';\nimport CompletedTodos from './containers/todos/CompletedTodos';\n\n\nconst App = ({initFirebase, isFirebaseloaded}) => {\n\n    useEffect(() => {\n        initFirebase()\n    }, [initFirebase])\n\n    if(isFirebaseloaded){\n        return (\n            <Router>\n                <Layout>\n                     <Switch>\n\n                        <PrivateRoute exact path={ROUTES.HOME} component={AllTodos} />\n\n                        <PrivateRoute  exact path={ROUTES.ACTIVE} component={ActiveTodos} />\n                        \n                        <PrivateRoute  exact path={ROUTES.COMPLETED} component={CompletedTodos} />\n\n                        <PrivateRoute  exact path={ROUTES.PROFILE} component={Profile} />\n                        \n                        <PublicRoute   exact path={ROUTES.LOGIN} component={Login} />\n                            \n                        <PublicRoute   exact path={ROUTES.REGISTER} component={Register} />\n                        \n                        <PrivateRoute  exact path={ROUTES.LOGOUT} component={Logout} />  \n                        {/* <Redirect path={ROUTES.HOME} component={AllTodos} /> */}\n\n                     </Switch>   \n                </Layout>\n            </Router>\n        );\n    }else{\n        return(\n           <Loader />\n        )\n    }\n \n}\n\nconst mapStateToProps = (ref) => {\n    return {\n        isFirebaseloaded: ref.firebase.isFirebaseloaded\n    }\n}\n\nexport default connect(mapStateToProps, {initFirebase})(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {types} from '../actions/actionTypes';\n\nconst inittialState = {\n    isAuthenticated: false,\n    user: {},\n    isFirebaseloaded: false\n}\n\n\nexport default(state = inittialState, action) => {\n\n    switch (action.type) {\n\n        case types.REGISTER_SUCCESS:\n            return Object.assign({}, state, {isAuthenticated: true});\n\n        case types.LOGIN_SUCCESS:\n            return Object.assign({}, state, {\n                isAuthenticated: true,\n                user: action.payload\n            });\n\n        case types.FIREBASE_LOADED:\n            return Object.assign({}, state, {\n                    isFirebaseloaded: action.payload\n            });\n            \n        case types.LOGOUT:\n            return Object.assign({}, state, {\n                isAuthenticated: false,\n                user: action.payload\n            });\n\n        case types.USER_NAME_UPDATED:\n                return {\n                    ...state,\n                    [state.user.displayName]: action.payload\n                }\n\n        case types.USER_EMAIL_UPDATED:\n                return {\n                    ...state,\n                    [state.user.email]: action.payload\n                }\n\n        case types.USER_PASSWORD_UPDATED:\n                return state\n\n\n        default:\n            return state;\n    }\n\n};\n","import {types} from '../actions/actionTypes';\n\nconst inittialState = {\n    items: [],\n    loading: false,\n\n}\n\nexport default(state = inittialState, action) => {\n\n    switch (action.type) {\n\n        case types.FETCH_TODOS:\n            return Object.assign({}, state, {\n                items: action.payload,\n                loading: action.loading\n            });\n\n\n        case types.ADD_TODO:\n            return Object.assign({}, state, {\n                items: [action.payload].concat(state.items),\n            });\n\n\n        case types.MOVE_TODO:\n            return Object.assign({}, state, {\n                items: state.items.filter(item => item.id !== action.payload)\n            });\n\n\n        case types.DELETE_TODO:\n            return Object.assign({}, state, {\n                items: state.items.filter(item => item.id !== action.payload)\n            });\n\n\n        default:\n            return state;\n    }\n\n};\n","import { combineReducers } from 'redux';\nimport  authReducer from './authReducer'\nimport  todosReducer from './todosReducer';\n\nexport default combineReducers({\n  todos : todosReducer,\n  firebase: authReducer\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\n\n\nconst composeEnhancer = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose : compose;\n\nexport const store = createStore(\n    reducers, \n    composeEnhancer(\n        applyMiddleware(thunk)\n    )\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport {store} from './store'\n\n\n\nReactDOM.render (\n  <Provider store={store}>\n        <App/>\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}